// 检测字段
var LoginCheckFiled = function (el, msg) {
    this.$el = $(el);
    this.msg = msg;
    this.errcode = true;
};

LoginCheckFiled.prototype = {
    check: function () {
        this.errcode = $.trim(this.$el.val()).length == 0;
        return this;
    },
    showError: function () {
        this.$el[this.errcode ? 'addClass' : 'removeClass']('error-input');
    }
}
// 登录表单
var LoginForm = function (form) {
    this.$form = $(form);
    this.check_fields = [];
    this.rememberUserData = '';

};
LoginForm.prototype = {
    init: function (opt) {
        var self = this;
        this.remember_me = Number(this.$form.find('#remember-me-input').val());
        ns.placeholder(this.$form); // ie下模拟placeholder
        this.$form.find('.user-input > input').each(function () {
            if (this.name == 'LoginForm[password]') msg = '请输入密码';
            if (this.name == 'LoginForm[username]') msg = '请填写手机号/邮箱/用户名';
            self.check_fields[self.check_fields.length] = new LoginCheckFiled(this, msg);
        });
        this.rememberUserData = opt['rememberMe'];
        this.userData = opt['userData'];

        this.events();
        this.rememberUser(); //获取cookie 填写表单   Date:2017-06-29 @author leishao
        this.UserForm(); //获取主站用户数据之后自动登录
        return this;
    },
    UserForm: function () {
        if (this.userData != undefined) {
            $('#user-name').val((this.userData) ? this.userData.username : '');
            $('#user-pwd').val((this.userData) ? this.userData.password : '');
            $('#loginForm button').trigger("click");
        }
    },
    rememberUser: function () {
        var self = this;
        $('#user-name').val((this.rememberUserData) ? this.rememberUserData[0] : '');
        $('#user-pwd').val((this.rememberUserData) ? this.rememberUserData[1] : '');

        if (this.rememberUserData) {
            $('.remember-me').addClass('checked');
            $('#remember-me-input').val(1);
            this.remember_me = 1;
        }
    },
    events: function () {
        var self = this;
        this.$form.on('click', '.remember-me', function () {
            self.rememberMe();
        });

        /**
         * 登录口点击刷新验证码
         * @author zongqi 2017-5-16
         */
        var refreshCaptcha = function () {
            var htm = $.trim($('#user-captcha-template').html());
            $.get('/site/captcha', {'refresh': 1}, function (data) {
                htm = htm.replace('{{url}}', data.url);
                $('.user-captcha').html(htm);
            });
        };
        $('.user-captcha').on('click', '#captchaimg', refreshCaptcha);

        this.$form.on('submit', function (evt) {
            var that = this;
            if (!self.checkForm()) {
                return false;
            }
            $(this).find('button[type=submit]').html('正在登录...');
            $.post(this.action, $(this).serializeArray(), 'json')
                .done(function (res) {
                    if (res.errcode == 0) {
                        var _url = typeof res.jump_url !== 'undefined' ? res.jump_url : '/account/profile'
                        window.location = _url;
                        return false;
                    }
                    if ((res.errcode == 'X10003' || res.errcode == 'X10005') && $('.user-captcha').html() == '') {
                        $('#loginForm').css('display', 'block');
                        // 要显示验证码,且验证码还不存在
                        refreshCaptcha();
                    }
                    else if (res.errcode == 'X10003') {
                        $('#loginForm').css('display', 'block');
                        // 要显示验证码，且验证码已经存在,那么只做刷新
                        // $('#captchaimg').trigger( 'click' );
                        refreshCaptcha();
                    }
                    else if (res.errcode == 'X10005') {
                        $('#loginForm').css('display', 'block');
                        //
                    }
                    else if (res.errcode == 'X10006') {
                        $('#loginForm').css('display', 'none');
                        $('#bindForm').css('display', 'block');
                    }
                    else if (res.errcode == 'X10002') {
                        $('#loginForm').css('display', 'block');
                    }
                    else {
                        // X10002 and X10004 不需要显示验证码
                        $('.user-captcha').html('');
                    }
                    self.showTips(res.message);
                })
                .fail(function () {
                    alert('异常，登录失败');
                })
                .always(function () {
                    $(that).find('button[type=submit]').html('登录');
                });
            return false;
        });

        $.each(this.check_fields, function (i, item) {
            item.$el.on('blur', function () {
                var s = $.grep(self.check_fields, function (n) {
                    n.check();
                    return n.errcode;
                });
                if (s.length == 0) self.showTips(false);
                item.check();
                if (!item.errcode) item.showError()
            });
        });
    },

    checkForm: function () {
        var s = [];
        $.each(this.check_fields, function (i, _field) {
            _field.check();
            _field.showError();
            if (_field.errcode) {
                s.push(_field);
            }
        });
        /**
         * 判断用户名称是否合法
         */
        var username = $('#user-name').val();
        if (username.indexOf(' ') >= 0) {
            this.showTips('请输入合法的用户名');
            return false;
        }


        if (s.length == 2) {
            this.showTips('请输入账户名和密码');
            return false;
        }
        if (s.length == 0) {
            this.showTips(false);
            return true;
        }
        this.showTips(s[0].msg);
        return false;

    },
    showTips: function (msg) {
        if (msg) this.$form.find('#login-tips').html("<i class='cb-warn'></i>" + msg).css('visibility', 'visible');
        else this.$form.find('#login-tips').css('visibility', 'hidden');
    },

    rememberMe: function (state) {
        if (typeof state === 'undefined') {
            state = !this.remember_me;
        }
        state = !!state;
        this.remember_me = state ? 1 : 0;
        this.$form.find('#remember-me-input').val(this.remember_me);
        this.$form.find('.remember-me')[state ? 'addClass' : 'removeClass']('checked');

    }

};





